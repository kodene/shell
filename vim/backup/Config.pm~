package WSB::Software::Config;

use Moo;
use WSB::Types qw( AbsPath HashRef );
use WSB::Software;
use WSB::Result;
use Lexical::Accessor;
use Config::Any;
use Try::Tiny;

my $config;

has 'config_file' => (
    is       => 'lazy',
    isa      => AbsPath,
    required => 1,
    coerce   => 1,
);

lexical_has 'config' => (
    is       => 'rw',
    isa      => HashRef,
    accessor => \$config,
);


sub load {
    my $self = shift;
    my $ca;
    my $software;
    my $result;

    if ( $self->config_file->is_file ) {
        $ca = Config::Any->load_files( {
                files => [ $self->config_file()->stringify ], use_ext => 1
            } );
        $self->$config( @$ca[0]->{$self->config_file} );

        try {
            $software = WSB::Software->new( $self->$config );
        } catch {
            $result = WSB::Result->new(
                error => 1,
                message => $_,
            );
        } finally {
            if ( not @_ ) {
                $result = WSB::Result->new( data => $software );
            }
        };
    } else {
        $result = WSB::Result->new(
            error => 1,
            message => "Config file doesn't exist",
        );
    }

    return $result;
}

1;
