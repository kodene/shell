package TestObject;

use Moo;
use Types::Standard -types;
use List::Objects::Types qw( TypedArray );
use List::Objects::WithUtils 'autobox';
use Data::Dumper;

has 'T' => (
    is  => 'ro',
    isa => Object,
    required => 1,
);

has 'elements' => (
    is => 'rw',
    isa => TypedArray[Object],
    coerce => 1,
    default  => sub { [] },
);

sub add {
    my $self = shift;

    if ( ref $_[0] && $_[0]->isa($self->T) ) {
        $self->elements->push($_[0]);
    } else {
        my $class_name = ref $self->T;
        die "Not a $class_name object.";
    }
}

around BUILDARGS => sub {
    my $orig  = shift;
    my $class = shift;

    if ( @_ == 1 && ref $_[0] ) {
        return $class->$orig( T => $_[0] );
    } else {
        return $class->$orig(@_);
    }
    # return $class->$orig(@_);
};


1;
