package Object;

use Moo;
use Types::Standard -types;
use List::Objects::Types qw( TypedArray );
use List::Objects::WithUtils 'autobox';

has 'T' => (
    is  => 'ro',
    isa => Str,
    required => 1,
);

has 'elements' => (
    is => 'rw',
    isa => TypedArray[Object],
    coerce => 1,
    default  => sub { [] },
);

sub add {
    my $self = shift;

    if ( ref $_[0] && $_[0]->isa($self->T) ) {
        $self->elements->push($_[0]);
    } else {
        my $cname1 = $self->T;
        my $cname2 = ref $_[0];
        die "$cname2 is not a $cname1 object.";
    }
}

around BUILDARGS => sub {
    my $orig  = shift;
    my $class = shift;

    if ( @_ == 1 ) {
        return $class->$orig( T => $_[0] );
    } else {
        return $class->$orig(@_);
    }
};


1;
